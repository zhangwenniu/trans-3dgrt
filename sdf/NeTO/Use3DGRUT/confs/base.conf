general {
    base_exp_dir = /workspace/sdf/NeTO/Use3DGRUT/exp/CASE_NAME/base
    recording = [
        ./,
        ./models
    ]
}

dataset {
    data_dir = /workspace/sdf/NeTO/Use3DGRUT/data/CASE_NAME/
    render_cameras_name = cameras_sphere.npz
    object_cameras_name = cameras_sphere.npz
    screen_point_name = screen_point.npy
}


train {
    learning_rate = 5e-4
    learning_rate_alpha = 0.05
    init_epoch = 300000
    end_iter = 300000
    views = 72
    uncertain_map = False

    batch_size = 512
    validate_resolution_level = 8
    warm_up_end = 5000
    anneal_end = 0
    use_white_bkgd = False
    entropy = False

    save_freq = 10000
    val_freq = 5000
    val_mesh_freq = 5000
    report_freq = 200

    refract_weight = 0.0003
    igr_weight = 0.1
    mask_l1_weight = 0.1
    mask_binary_weight = 0.1
}

model {
    nerf {
        D = 8,
        d_in = 4,
        d_in_view = 3,
        W = 256,
        multires = 10,
        multires_view = 4,
        output_ch = 4,
        skips=[4],
        use_viewdirs=True
    }

    sdf_network {
        d_out = 1
        d_in = 3
        d_hidden = 256
        n_layers = 8
        skip_in = [4]
        multires = 5
        bias = 0.5
        scale = 1.0
        geometric_init = True
        weight_norm = True
    }

    variance_network {
        init_val = 0.3
    }

    neus_renderer {
        n_samples = 64
        n_importance = 64
        n_outside = 0
        up_sample_steps = 4     # 1 for simple coarse-to-fine sampling
        perturb = 1.0
    }
}
